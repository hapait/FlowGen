{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Shaft\\\\Desktop\\\\flow\\\\flowgen2\\\\src\\\\Components\\\\Basic2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from 'react';\nimport ReactFlow, { addEdge, Background, Controls, MiniMap } from 'react-flow-renderer';\nconst initialElements = [{\n  id: '1',\n  type: 'input',\n  data: {\n    label: 'Mind Node'\n  },\n  position: {\n    x: 0,\n    y: 0\n  }\n}];\n\nconst onLoad = reactFlowInstance => {\n  reactFlowInstance.fitView();\n};\n\nconst Card = () => {\n  _s();\n\n  const [elements, setElements] = useState(initialElements);\n  const [name, setName] = useState(\"\");\n\n  const addNode = () => {\n    setElements(e => e.concat({\n      id: (e.length + 1).toString(),\n      data: {\n        label: `${name}`\n      },\n      position: {\n        x: Math.random() * window.innerWidth,\n        y: Math.random() * window.innerHeight\n      }\n    }));\n  };\n\n  const onConnect = params => setElements(e => addEdge(params, e));\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n      elements: elements,\n      onLoad: onLoad,\n      style: {\n        width: '100%',\n        height: '90vh'\n      },\n      onConnect: onConnect,\n      connectionLineStyle: {\n        stroke: \"#ddd\",\n        strokeWidth: 2\n      },\n      connectionLineType: \"bezier\",\n      snapToGrid: true,\n      snapGrid: [16, 16],\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        color: \"#888\",\n        gap: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setName(e.target.value),\n        name: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addNode,\n        children: \"Add Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Card, \"m1VSeBNMC6mnc/JQHwLwM3dmmeE=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["C:/Users/Shaft/Desktop/flow/flowgen2/src/Components/Basic2.js"],"names":["React","useState","Fragment","ReactFlow","addEdge","Background","Controls","MiniMap","initialElements","id","type","data","label","position","x","y","onLoad","reactFlowInstance","fitView","Card","elements","setElements","name","setName","addNode","e","concat","length","toString","Math","random","window","innerWidth","innerHeight","onConnect","params","width","height","stroke","strokeWidth","target","value"],"mappings":"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","sourcesContent":["import React, {useState, Fragment} from 'react';\r\n\r\nimport ReactFlow, {addEdge, Background, Controls, MiniMap} from 'react-flow-renderer';\r\n\r\nconst initialElements = [\r\n    {id: '1', type: 'input', data:{label: 'Mind Node'}, position: {x:0,y:0}}\r\n]\r\nconst onLoad = (reactFlowInstance) =>  {\r\n    reactFlowInstance.fitView();\r\n}\r\n\r\nconst Card = () => {\r\n\r\n    const [elements, setElements] = useState(initialElements);\r\n    const [name, setName] = useState(\"\")\r\n    \r\n    const addNode = () => {\r\n        setElements(e => e.concat({\r\n            id: (e.length+1).toString(),\r\n            data: {label: `${name}`},\r\n            position: {x: Math.random() * window.innerWidth, y: Math.random() * window.innerHeight}\r\n        }));\r\n    };\r\n\r\n    const onConnect = (params) => setElements(e => addEdge(params,e));\r\n    \r\n    return(\r\n        <Fragment>\r\n            <ReactFlow\r\n            elements={elements}\r\n            onLoad={onLoad}\r\n            style={{width:'100%',height: '90vh'}}\r\n            onConnect = {onConnect}\r\n            connectionLineStyle={{stroke: \"#ddd\", strokeWidth: 2}}\r\n            connectionLineType = \"bezier\"\r\n            snapToGrid = {true}\r\n            snapGrid={[16,16]}\r\n            >\r\n                <Background color=\"#888\" gap={16} />\r\n                <Controls />\r\n                </ReactFlow>\r\n\r\n            <div>\r\n                <input type=\"text\"\r\n                onChange={e => setName(e.target.value)}\r\n                name=\"title\"/>\r\n                <button \r\n                type=\"button\"\r\n                onClick={addNode}\r\n                >Add Node</button>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Card;"]},"metadata":{},"sourceType":"module"}