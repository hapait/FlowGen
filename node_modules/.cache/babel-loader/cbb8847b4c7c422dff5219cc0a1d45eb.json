{"ast":null,"code":"import _objectSpread from\"C:/Users/Shaft/Desktop/flow/flowgen2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/Shaft/Desktop/flow/flowgen2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import logo from\"./logo.svg\";import'./App.css';import Basic from'./Components/Basic';import Basic2 from'./Components/Basic2';import Basic3 from'./Components/Basic3';import ReactFlow from'react-flow-renderer';import CustomNodeFlow from'./Components/CustomNode';import SideBar from'./Components/Sidebar';import React,{useState,Fragment}from'react';import Mix from'./Components/Mix';//import {storage, firebase} from './firebase/firebase';\nimport{storage}from'./firebase';var initialElements=[{id:'1',type:'input',data:{label:'Mind Node'},position:{x:0,y:0}}];function App(){//const [elements, setElements] = useState(initialElements);\nvar allInputs={imgUrl:''};var _useState=useState(''),_useState2=_slicedToArray(_useState,2),imageAsFile=_useState2[0],setImageAsFile=_useState2[1];var _useState3=useState(allInputs),_useState4=_slicedToArray(_useState3,2),imageAsUrl=_useState4[0],setImageAsUrl=_useState4[1];console.log(imageAsFile);var handleImageAsFile=function handleImageAsFile(e){var image=e.target.files[0];setImageAsFile(function(imageFile){return image;});};var handleFireBaseUpload=function handleFireBaseUpload(e){e.preventDefault();console.log('start of upload');// async magic goes here...\nif(imageAsFile===''){console.error(\"not an image, the image file is a \".concat(typeof imageAsFile));}var uploadTask=storage.ref(\"/images/\".concat(imageAsFile.name)).put(imageAsFile);//initiates the firebase side uploading \nuploadTask.on('state_changed',function(snapShot){//takes a snap shot of the process as it is happening\nconsole.log(snapShot);},function(err){//catches the errors\nconsole.log(err);},function(){// gets the functions from storage refences the image storage in firebase by the children\n// gets the download url then sets the image from firebase as the value for the imgUrl key:\nstorage.ref('images').child(imageAsFile.name).getDownloadURL().then(function(fireBaseUrl){setImageAsUrl(function(prevObject){return _objectSpread(_objectSpread({},prevObject),{},{imgUrl:fireBaseUrl});});});});};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(Basic2,{})});}export default App;","map":{"version":3,"sources":["C:/Users/Shaft/Desktop/flow/flowgen2/src/App.js"],"names":["Basic","Basic2","Basic3","ReactFlow","CustomNodeFlow","SideBar","React","useState","Fragment","Mix","storage","initialElements","id","type","data","label","position","x","y","App","allInputs","imgUrl","imageAsFile","setImageAsFile","imageAsUrl","setImageAsUrl","console","log","handleImageAsFile","e","image","target","files","imageFile","handleFireBaseUpload","preventDefault","error","uploadTask","ref","name","put","on","snapShot","err","child","getDownloadURL","then","fireBaseUrl","prevObject"],"mappings":"6XACA,MAAO,WAAP,CACA,MAAOA,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,qBAAtB,CACA,MAAOC,CAAAA,cAAP,KAA2B,yBAA3B,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,KAA0C,OAA1C,CACA,MAAOC,CAAAA,GAAP,KAAgB,kBAAhB,CACA;AACA,OAAQC,OAAR,KAAsB,YAAtB,CACA,GAAMC,CAAAA,eAAe,CAAG,CACtB,CAAEC,EAAE,CAAE,GAAN,CAAWC,IAAI,CAAE,OAAjB,CAA0BC,IAAI,CAAE,CAAEC,KAAK,CAAE,WAAT,CAAhC,CAAwDC,QAAQ,CAAE,CAAEC,CAAC,CAAE,CAAL,CAAQC,CAAC,CAAE,CAAX,CAAlE,CADsB,CAAxB,CAIA,QAASC,CAAAA,GAAT,EAAe,CACb;AACA,GAAMC,CAAAA,SAAS,CAAG,CAAEC,MAAM,CAAE,EAAV,CAAlB,CAFa,cAGyBd,QAAQ,CAAC,EAAD,CAHjC,wCAGNe,WAHM,eAGOC,cAHP,8BAIuBhB,QAAQ,CAACa,SAAD,CAJ/B,yCAINI,UAJM,eAIMC,aAJN,eAMbC,OAAO,CAACC,GAAR,CAAYL,WAAZ,EACA,GAAMM,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,CAAD,CAAO,CAC/B,GAAMC,CAAAA,KAAK,CAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAd,CACAT,cAAc,CAAC,SAAAU,SAAS,QAAKH,CAAAA,KAAL,EAAV,CAAd,CACD,CAHD,CAIA,GAAMI,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAAAL,CAAC,CAAI,CAChCA,CAAC,CAACM,cAAF,GACAT,OAAO,CAACC,GAAR,CAAY,iBAAZ,EACA;AACA,GAAIL,WAAW,GAAK,EAApB,CAAwB,CACtBI,OAAO,CAACU,KAAR,6CAAmD,MAAQd,CAAAA,WAA3D,GACD,CACD,GAAMe,CAAAA,UAAU,CAAG3B,OAAO,CAAC4B,GAAR,mBAAuBhB,WAAW,CAACiB,IAAnC,GAA2CC,GAA3C,CAA+ClB,WAA/C,CAAnB,CACA;AACAe,UAAU,CAACI,EAAX,CAAc,eAAd,CACE,SAACC,QAAD,CAAc,CACZ;AACAhB,OAAO,CAACC,GAAR,CAAYe,QAAZ,EACD,CAJH,CAIK,SAACC,GAAD,CAAS,CACV;AACAjB,OAAO,CAACC,GAAR,CAAYgB,GAAZ,EACD,CAPH,CAOK,UAAM,CACP;AACA;AACAjC,OAAO,CAAC4B,GAAR,CAAY,QAAZ,EAAsBM,KAAtB,CAA4BtB,WAAW,CAACiB,IAAxC,EAA8CM,cAA9C,GACGC,IADH,CACQ,SAAAC,WAAW,CAAI,CACnBtB,aAAa,CAAC,SAAAuB,UAAU,wCAAUA,UAAV,MAAsB3B,MAAM,CAAE0B,WAA9B,IAAX,CAAb,CACD,CAHH,EAID,CAdH,EAeD,CAxBD,CA0BA,mBACE,YAAK,SAAS,CAAC,KAAf,uBAcE,KAAC,MAAD,IAdF,EADF,CAkBD,CAED,cAAe5B,CAAAA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Basic from './Components/Basic';\nimport Basic2 from './Components/Basic2';\nimport Basic3 from './Components/Basic3';\nimport ReactFlow from 'react-flow-renderer';\nimport CustomNodeFlow from './Components/CustomNode';\nimport SideBar from './Components/Sidebar';\nimport React, { useState, Fragment } from 'react';\nimport Mix from './Components/Mix';\n//import {storage, firebase} from './firebase/firebase';\nimport {storage} from './firebase';\nconst initialElements = [\n  { id: '1', type: 'input', data: { label: 'Mind Node' }, position: { x: 0, y: 0 } }\n]\n\nfunction App() {\n  //const [elements, setElements] = useState(initialElements);\n  const allInputs = { imgUrl: '' }\n  const [imageAsFile, setImageAsFile] = useState('')\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs)\n\n  console.log(imageAsFile)\n  const handleImageAsFile = (e) => {\n    const image = e.target.files[0]\n    setImageAsFile(imageFile => (image))\n  }\n  const handleFireBaseUpload = e => {\n    e.preventDefault()\n    console.log('start of upload')\n    // async magic goes here...\n    if (imageAsFile === '') {\n      console.error(`not an image, the image file is a ${typeof (imageAsFile)}`)\n    }\n    const uploadTask = storage.ref(`/images/${imageAsFile.name}`).put(imageAsFile)\n    //initiates the firebase side uploading \n    uploadTask.on('state_changed',\n      (snapShot) => {\n        //takes a snap shot of the process as it is happening\n        console.log(snapShot)\n      }, (err) => {\n        //catches the errors\n        console.log(err)\n      }, () => {\n        // gets the functions from storage refences the image storage in firebase by the children\n        // gets the download url then sets the image from firebase as the value for the imgUrl key:\n        storage.ref('images').child(imageAsFile.name).getDownloadURL()\n          .then(fireBaseUrl => {\n            setImageAsUrl(prevObject => ({ ...prevObject, imgUrl: fireBaseUrl }))\n          })\n      })\n  }\n\n  return (\n    <div className=\"App\">\n      {\n        //<CustomNodeFlow/>\n        //<Mix/>\n        //\n      }\n      {/* <form onSubmit={handleFireBaseUpload}>\n        <input\n          type=\"file\"\n          onChange={handleImageAsFile}\n        />\n        <button>upload to firebase</button>\n      </form>\n      <img src={imageAsUrl.imgUrl} alt=\"image tag\" /> */}\n      <Basic2/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}