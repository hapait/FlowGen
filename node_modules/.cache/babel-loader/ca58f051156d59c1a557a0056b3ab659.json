{"ast":null,"code":"import _objectSpread from\"C:/Users/Shaft/Desktop/flow/flowgen2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/Shaft/Desktop/flow/flowgen2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState,useEffect}from'react';import ReactFlow,{isEdge,removeElements,addEdge,MiniMap,Controls}from'react-flow-renderer';import ColorSelectorNode from'./ColorSelectorNode';import'../index.css';var onLoad=function onLoad(reactFlowInstance){console.log('flow loaded:',reactFlowInstance);setTimeout(function(){return reactFlowInstance.fitView();},1);};var onNodeDragStop=function onNodeDragStop(event,node){return console.log('drag stop',node);};var onElementClick=function onElementClick(event,element){return console.log('click',element);};var initBgColor='#1A192B';var connectionLineStyle={stroke:'#fff'};var snapGrid=[20,20];var nodeTypes={selectorNode:ColorSelectorNode};var CustomNodeFlow=function CustomNodeFlow(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),elements=_useState2[0],setElements=_useState2[1];var _useState3=useState(initBgColor),_useState4=_slicedToArray(_useState3,2),bgColor=_useState4[0],setBgColor=_useState4[1];useEffect(function(){var onChange=function onChange(event){setElements(function(els){return els.map(function(e){if(isEdge(e)||e.id!=='2'){return e;}var color=event.target.value;setBgColor(color);return _objectSpread(_objectSpread({},e),{},{data:_objectSpread(_objectSpread({},e.data),{},{color:color})});});});};setElements([{id:'1',type:'input',data:{label:'An input node'},position:{x:0,y:50},sourcePosition:'right'},{id:'2',type:'selectorNode',data:{onChange:onChange,color:initBgColor},style:{border:'1px solid #777',padding:10},position:{x:300,y:50}},{id:'3',type:'output',data:{label:'Output A'},position:{x:650,y:25},targetPosition:'left'},{id:'4',type:'output',data:{label:'Output B'},position:{x:650,y:100},targetPosition:'left'},{id:'e1-2',source:'1',target:'2',animated:true,style:{stroke:'#fff'}},{id:'e2a-3',source:'2',target:'3',sourceHandle:'a',animated:true,style:{stroke:'#fff'}},{id:'e2b-4',source:'2',target:'4',sourceHandle:'b',animated:true,style:{stroke:'#fff'}}]);},[]);var onElementsRemove=function onElementsRemove(elementsToRemove){return setElements(function(els){return removeElements(elementsToRemove,els);});};var onConnect=function onConnect(params){return setElements(function(els){return addEdge(_objectSpread(_objectSpread({},params),{},{animated:true,style:{stroke:'#fff'}}),els);});};return/*#__PURE__*/_jsxs(ReactFlow,{elements:elements,onElementClick:onElementClick,onElementsRemove:onElementsRemove,onConnect:onConnect,onNodeDragStop:onNodeDragStop,style:{background:bgColor},onLoad:onLoad,nodeTypes:nodeTypes,connectionLineStyle:connectionLineStyle,snapToGrid:true,snapGrid:snapGrid,defaultZoom:1.5,children:[/*#__PURE__*/_jsx(MiniMap,{nodeStrokeColor:function nodeStrokeColor(n){if(n.type==='input')return'#0041d0';if(n.type==='selectorNode')return bgColor;if(n.type==='output')return'#ff0072';},nodeColor:function nodeColor(n){if(n.type==='selectorNode')return bgColor;return'#fff';}}),/*#__PURE__*/_jsx(Controls,{})]});};export default CustomNodeFlow;","map":{"version":3,"sources":["C:/Users/Shaft/Desktop/flow/flowgen2/src/Components/CustomNode.js"],"names":["React","useState","useEffect","ReactFlow","isEdge","removeElements","addEdge","MiniMap","Controls","ColorSelectorNode","onLoad","reactFlowInstance","console","log","setTimeout","fitView","onNodeDragStop","event","node","onElementClick","element","initBgColor","connectionLineStyle","stroke","snapGrid","nodeTypes","selectorNode","CustomNodeFlow","elements","setElements","bgColor","setBgColor","onChange","els","map","e","id","color","target","value","data","type","label","position","x","y","sourcePosition","style","border","padding","targetPosition","source","animated","sourceHandle","onElementsRemove","elementsToRemove","onConnect","params","background","n"],"mappings":"6YAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,SAAP,EACEC,MADF,CAEEC,cAFF,CAGEC,OAHF,CAIEC,OAJF,CAKEC,QALF,KAMO,qBANP,CAOA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,MAAO,cAAP,CACA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,iBAAD,CAAuB,CACpCC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAA4BF,iBAA5B,EACAG,UAAU,CAAC,iBAAMH,CAAAA,iBAAiB,CAACI,OAAlB,EAAN,EAAD,CAAoC,CAApC,CAAV,CACD,CAHD,CAIA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAQC,IAAR,QAAiBN,CAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAyBK,IAAzB,CAAjB,EAAvB,CACA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACF,KAAD,CAAQG,OAAR,QAAoBR,CAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqBO,OAArB,CAApB,EAAvB,CACA,GAAMC,CAAAA,WAAW,CAAG,SAApB,CACA,GAAMC,CAAAA,mBAAmB,CAAG,CAAEC,MAAM,CAAE,MAAV,CAA5B,CACA,GAAMC,CAAAA,QAAQ,CAAG,CAAC,EAAD,CAAK,EAAL,CAAjB,CACA,GAAMC,CAAAA,SAAS,CAAG,CAChBC,YAAY,CAAEjB,iBADE,CAAlB,CAGA,GAAMkB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,eACK1B,QAAQ,CAAC,EAAD,CADb,wCACpB2B,QADoB,eACVC,WADU,8BAEG5B,QAAQ,CAACoB,WAAD,CAFX,yCAEpBS,OAFoB,eAEXC,UAFW,eAG3B7B,SAAS,CAAC,UAAM,CACd,GAAM8B,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACf,KAAD,CAAW,CAC1BY,WAAW,CAAC,SAACI,GAAD,QACVA,CAAAA,GAAG,CAACC,GAAJ,CAAQ,SAACC,CAAD,CAAO,CACb,GAAI/B,MAAM,CAAC+B,CAAD,CAAN,EAAaA,CAAC,CAACC,EAAF,GAAS,GAA1B,CAA+B,CAC7B,MAAOD,CAAAA,CAAP,CACD,CACD,GAAME,CAAAA,KAAK,CAAGpB,KAAK,CAACqB,MAAN,CAAaC,KAA3B,CACAR,UAAU,CAACM,KAAD,CAAV,CACA,sCACKF,CADL,MAEEK,IAAI,gCACCL,CAAC,CAACK,IADH,MAEFH,KAAK,CAALA,KAFE,EAFN,GAOD,CAbD,CADU,EAAD,CAAX,CAgBD,CAjBD,CAkBAR,WAAW,CAAC,CACV,CACEO,EAAE,CAAE,GADN,CAEEK,IAAI,CAAE,OAFR,CAGED,IAAI,CAAE,CAAEE,KAAK,CAAE,eAAT,CAHR,CAIEC,QAAQ,CAAE,CAAEC,CAAC,CAAE,CAAL,CAAQC,CAAC,CAAE,EAAX,CAJZ,CAKEC,cAAc,CAAE,OALlB,CADU,CAQV,CACEV,EAAE,CAAE,GADN,CAEEK,IAAI,CAAE,cAFR,CAGED,IAAI,CAAE,CAAER,QAAQ,CAAEA,QAAZ,CAAsBK,KAAK,CAAEhB,WAA7B,CAHR,CAIE0B,KAAK,CAAE,CAAEC,MAAM,CAAE,gBAAV,CAA4BC,OAAO,CAAE,EAArC,CAJT,CAKEN,QAAQ,CAAE,CAAEC,CAAC,CAAE,GAAL,CAAUC,CAAC,CAAE,EAAb,CALZ,CARU,CAeV,CACET,EAAE,CAAE,GADN,CAEEK,IAAI,CAAE,QAFR,CAGED,IAAI,CAAE,CAAEE,KAAK,CAAE,UAAT,CAHR,CAIEC,QAAQ,CAAE,CAAEC,CAAC,CAAE,GAAL,CAAUC,CAAC,CAAE,EAAb,CAJZ,CAKEK,cAAc,CAAE,MALlB,CAfU,CAsBV,CACEd,EAAE,CAAE,GADN,CAEEK,IAAI,CAAE,QAFR,CAGED,IAAI,CAAE,CAAEE,KAAK,CAAE,UAAT,CAHR,CAIEC,QAAQ,CAAE,CAAEC,CAAC,CAAE,GAAL,CAAUC,CAAC,CAAE,GAAb,CAJZ,CAKEK,cAAc,CAAE,MALlB,CAtBU,CA6BV,CACEd,EAAE,CAAE,MADN,CAEEe,MAAM,CAAE,GAFV,CAGEb,MAAM,CAAE,GAHV,CAIEc,QAAQ,CAAE,IAJZ,CAKEL,KAAK,CAAE,CAAExB,MAAM,CAAE,MAAV,CALT,CA7BU,CAoCV,CACEa,EAAE,CAAE,OADN,CAEEe,MAAM,CAAE,GAFV,CAGEb,MAAM,CAAE,GAHV,CAIEe,YAAY,CAAE,GAJhB,CAKED,QAAQ,CAAE,IALZ,CAMEL,KAAK,CAAE,CAAExB,MAAM,CAAE,MAAV,CANT,CApCU,CA4CV,CACEa,EAAE,CAAE,OADN,CAEEe,MAAM,CAAE,GAFV,CAGEb,MAAM,CAAE,GAHV,CAIEe,YAAY,CAAE,GAJhB,CAKED,QAAQ,CAAE,IALZ,CAMEL,KAAK,CAAE,CAAExB,MAAM,CAAE,MAAV,CANT,CA5CU,CAAD,CAAX,CAqDD,CAxEQ,CAwEN,EAxEM,CAAT,CAyEA,GAAM+B,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,gBAAD,QACvB1B,CAAAA,WAAW,CAAC,SAACI,GAAD,QAAS5B,CAAAA,cAAc,CAACkD,gBAAD,CAAmBtB,GAAnB,CAAvB,EAAD,CADY,EAAzB,CAEA,GAAMuB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,MAAD,QAChB5B,CAAAA,WAAW,CAAC,SAACI,GAAD,QACV3B,CAAAA,OAAO,gCAAMmD,MAAN,MAAcL,QAAQ,CAAE,IAAxB,CAA8BL,KAAK,CAAE,CAAExB,MAAM,CAAE,MAAV,CAArC,GAA2DU,GAA3D,CADG,EAAD,CADK,EAAlB,CAIA,mBACE,MAAC,SAAD,EACE,QAAQ,CAAEL,QADZ,CAEE,cAAc,CAAET,cAFlB,CAGE,gBAAgB,CAAEmC,gBAHpB,CAIE,SAAS,CAAEE,SAJb,CAKE,cAAc,CAAExC,cALlB,CAME,KAAK,CAAE,CAAE0C,UAAU,CAAE5B,OAAd,CANT,CAOE,MAAM,CAAEpB,MAPV,CAQE,SAAS,CAAEe,SARb,CASE,mBAAmB,CAAEH,mBATvB,CAUE,UAAU,CAAE,IAVd,CAWE,QAAQ,CAAEE,QAXZ,CAYE,WAAW,CAAE,GAZf,wBAcE,KAAC,OAAD,EACE,eAAe,CAAE,yBAACmC,CAAD,CAAO,CACtB,GAAIA,CAAC,CAAClB,IAAF,GAAW,OAAf,CAAwB,MAAO,SAAP,CACxB,GAAIkB,CAAC,CAAClB,IAAF,GAAW,cAAf,CAA+B,MAAOX,CAAAA,OAAP,CAC/B,GAAI6B,CAAC,CAAClB,IAAF,GAAW,QAAf,CAAyB,MAAO,SAAP,CAC1B,CALH,CAME,SAAS,CAAE,mBAACkB,CAAD,CAAO,CAChB,GAAIA,CAAC,CAAClB,IAAF,GAAW,cAAf,CAA+B,MAAOX,CAAAA,OAAP,CAC/B,MAAO,MAAP,CACD,CATH,EAdF,cAyBE,KAAC,QAAD,IAzBF,GADF,CA6BD,CA/GD,CAgHA,cAAeH,CAAAA,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactFlow, {\r\n  isEdge,\r\n  removeElements,\r\n  addEdge,\r\n  MiniMap,\r\n  Controls,\r\n} from 'react-flow-renderer';\r\nimport ColorSelectorNode from './ColorSelectorNode';\r\nimport '../index.css';\r\nconst onLoad = (reactFlowInstance) => {\r\n  console.log('flow loaded:', reactFlowInstance);\r\n  setTimeout(() => reactFlowInstance.fitView(), 1);\r\n};\r\nconst onNodeDragStop = (event, node) => console.log('drag stop', node);\r\nconst onElementClick = (event, element) => console.log('click', element);\r\nconst initBgColor = '#1A192B';\r\nconst connectionLineStyle = { stroke: '#fff' };\r\nconst snapGrid = [20, 20];\r\nconst nodeTypes = {\r\n  selectorNode: ColorSelectorNode,\r\n};\r\nconst CustomNodeFlow = () => {\r\n  const [elements, setElements] = useState([]);\r\n  const [bgColor, setBgColor] = useState(initBgColor);\r\n  useEffect(() => {\r\n    const onChange = (event) => {\r\n      setElements((els) =>\r\n        els.map((e) => {\r\n          if (isEdge(e) || e.id !== '2') {\r\n            return e;\r\n          }\r\n          const color = event.target.value;\r\n          setBgColor(color);\r\n          return {\r\n            ...e,\r\n            data: {\r\n              ...e.data,\r\n              color,\r\n            },\r\n          };\r\n        })\r\n      );\r\n    };\r\n    setElements([\r\n      {\r\n        id: '1',\r\n        type: 'input',\r\n        data: { label: 'An input node' },\r\n        position: { x: 0, y: 50 },\r\n        sourcePosition: 'right',\r\n      },\r\n      {\r\n        id: '2',\r\n        type: 'selectorNode',\r\n        data: { onChange: onChange, color: initBgColor },\r\n        style: { border: '1px solid #777', padding: 10 },\r\n        position: { x: 300, y: 50 },\r\n      },\r\n      {\r\n        id: '3',\r\n        type: 'output',\r\n        data: { label: 'Output A' },\r\n        position: { x: 650, y: 25 },\r\n        targetPosition: 'left',\r\n      },\r\n      {\r\n        id: '4',\r\n        type: 'output',\r\n        data: { label: 'Output B' },\r\n        position: { x: 650, y: 100 },\r\n        targetPosition: 'left',\r\n      },\r\n      {\r\n        id: 'e1-2',\r\n        source: '1',\r\n        target: '2',\r\n        animated: true,\r\n        style: { stroke: '#fff' },\r\n      },\r\n      {\r\n        id: 'e2a-3',\r\n        source: '2',\r\n        target: '3',\r\n        sourceHandle: 'a',\r\n        animated: true,\r\n        style: { stroke: '#fff' },\r\n      },\r\n      {\r\n        id: 'e2b-4',\r\n        source: '2',\r\n        target: '4',\r\n        sourceHandle: 'b',\r\n        animated: true,\r\n        style: { stroke: '#fff' },\r\n      },\r\n    ]);\r\n  }, []);\r\n  const onElementsRemove = (elementsToRemove) =>\r\n    setElements((els) => removeElements(elementsToRemove, els));\r\n  const onConnect = (params) =>\r\n    setElements((els) =>\r\n      addEdge({ ...params, animated: true, style: { stroke: '#fff' } }, els)\r\n    );\r\n  return (\r\n    <ReactFlow\r\n      elements={elements}\r\n      onElementClick={onElementClick}\r\n      onElementsRemove={onElementsRemove}\r\n      onConnect={onConnect}\r\n      onNodeDragStop={onNodeDragStop}\r\n      style={{ background: bgColor }}\r\n      onLoad={onLoad}\r\n      nodeTypes={nodeTypes}\r\n      connectionLineStyle={connectionLineStyle}\r\n      snapToGrid={true}\r\n      snapGrid={snapGrid}\r\n      defaultZoom={1.5}\r\n    >\r\n      <MiniMap\r\n        nodeStrokeColor={(n) => {\r\n          if (n.type === 'input') return '#0041d0';\r\n          if (n.type === 'selectorNode') return bgColor;\r\n          if (n.type === 'output') return '#ff0072';\r\n        }}\r\n        nodeColor={(n) => {\r\n          if (n.type === 'selectorNode') return bgColor;\r\n          return '#fff';\r\n        }}\r\n      />\r\n      <Controls />\r\n    </ReactFlow>\r\n  );\r\n};\r\nexport default CustomNodeFlow;"]},"metadata":{},"sourceType":"module"}