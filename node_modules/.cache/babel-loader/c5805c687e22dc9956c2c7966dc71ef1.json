{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Shaft\\\\Desktop\\\\flow\\\\flowgen2\\\\src\\\\Components\\\\Mix.js\",\n    _s = $RefreshSig$();\n\n//import logo from './logo.svg';\nimport '../App.css'; //import Basic from './Components/Basic';\n//import Basic2 from './Components/Basic2';\n\nimport Basic3 from './Basic3'; //import ReactFlow from 'react-flow-renderer';\n//import CustomNodeFlow from './Components/CustomNode';\n\nimport SideBar from './Sidebar';\nimport React, { useState, Fragment } from 'react';\nconst initialElements = [{\n  id: '1',\n  type: 'input',\n  data: {\n    label: 'Mind Node'\n  },\n  position: {\n    x: 0,\n    y: 0\n  }\n}];\nconst [elements, setElements] = useState(initialElements); //const [elements, setElements] = useState([]);\n\nconst [lastId, setLastId] = useState(1);\nconst [name, setName] = useState(\"\");\nconst [text, setText] = useState(\"blank\");\nconst [removingId, setRemovingId] = useState(0);\n\nconst addNode2 = () => {\n  var lId = parseInt(`${lastId}`);\n  var node = getImageNode(lId + 1);\n  setText(lId);\n  setLastId(lId + 1);\n  setElements(e => e.concat({\n    //id: (e.length + 1).toString(),\n    id: lId + 1,\n    //data: { label: <div><h1>Hello</h1></div> },\n    data: {\n      label: node\n    },\n    //position: { x: Math.random() * window.innerWidth, y: Math.random() * window.innerHeight }\n    position: {\n      x: e[0].position.x + 50,\n      y: e[0].position.y + 50\n    }\n  }));\n};\n\nconst getImageNode = nid => {\n  var x = nid.toString();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Node \", nid]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => onRemove(x),\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 12\n  }, this);\n};\n\nfunction Mix() {\n  _s();\n\n  const [elements, setElements] = useState(initialElements);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Basic3, {\n      elements: elements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Mix, \"2AKLtE/cU4ESCqJy1IrkhE3P+V8=\");\n\n_c = Mix;\nexport default Mix;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mix\");","map":{"version":3,"sources":["C:/Users/Shaft/Desktop/flow/flowgen2/src/Components/Mix.js"],"names":["Basic3","SideBar","React","useState","Fragment","initialElements","id","type","data","label","position","x","y","elements","setElements","lastId","setLastId","name","setName","text","setText","removingId","setRemovingId","addNode2","lId","parseInt","node","getImageNode","e","concat","nid","toString","onRemove","Mix"],"mappings":";;;;;AAAA;AACA,OAAO,YAAP,C,CACA;AACA;;AACA,OAAOA,MAAP,MAAmB,UAAnB,C,CACA;AACA;;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AAEA,MAAMC,eAAe,GAAG,CACpB;AAAEC,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,IAAI,EAAE,OAAjB;AAA0BC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAhC;AAAwDC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX;AAAlE,CADoB,CAAxB;AAGA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAACE,eAAD,CAAxC,C,CACA;;AACA,MAAM,CAACU,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,CAAD,CAApC;AACA,MAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,OAAD,CAAhC;AACA,MAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,CAAD,CAA5C;;AAEA,MAAMoB,QAAQ,GAAG,MAAM;AACnB,MAAIC,GAAG,GAAGC,QAAQ,CAAE,GAAEV,MAAO,EAAX,CAAlB;AACA,MAAIW,IAAI,GAAGC,YAAY,CAACH,GAAG,GAAG,CAAP,CAAvB;AACAJ,EAAAA,OAAO,CAACI,GAAD,CAAP;AACAR,EAAAA,SAAS,CAACQ,GAAG,GAAG,CAAP,CAAT;AACAV,EAAAA,WAAW,CAACc,CAAC,IAAIA,CAAC,CAACC,MAAF,CAAS;AACtB;AACAvB,IAAAA,EAAE,EAAEkB,GAAG,GAAE,CAFa;AAGtB;AACAhB,IAAAA,IAAI,EAAE;AAAEC,MAAAA,KAAK,EAAEiB;AAAT,KAJgB;AAKtB;AACAhB,IAAAA,QAAQ,EAAE;AAACC,MAAAA,CAAC,EAAEiB,CAAC,CAAC,CAAD,CAAD,CAAKlB,QAAL,CAAcC,CAAd,GAAkB,EAAtB;AAA0BC,MAAAA,CAAC,EAAEgB,CAAC,CAAC,CAAD,CAAD,CAAKlB,QAAL,CAAcE,CAAd,GAAkB;AAA/C;AANY,GAAT,CAAN,CAAX;AAQH,CAbD;;AAeA,MAAMe,YAAY,GAAIG,GAAD,IAAS;AAC1B,MAAInB,CAAC,GAAGmB,GAAG,CAACC,QAAJ,EAAR;AACA,sBAAO;AAAA,4BACH;AAAA,0BAAUD,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAQ,MAAA,OAAO,EAAEF,CAAC,IAAEI,QAAQ,CAACrB,CAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH,CAND;;AAQA,SAASsB,GAAT,GAAe;AAAA;;AACX,QAAM,CAACpB,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAACE,eAAD,CAAxC;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEQ;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GARQoB,G;;KAAAA,G;AAUT,eAAeA,GAAf","sourcesContent":["//import logo from './logo.svg';\r\nimport '../App.css';\r\n//import Basic from './Components/Basic';\r\n//import Basic2 from './Components/Basic2';\r\nimport Basic3 from './Basic3';\r\n//import ReactFlow from 'react-flow-renderer';\r\n//import CustomNodeFlow from './Components/CustomNode';\r\nimport SideBar from './Sidebar';\r\nimport React, { useState, Fragment } from 'react';\r\n\r\nconst initialElements = [\r\n    { id: '1', type: 'input', data: { label: 'Mind Node' }, position: { x: 0, y: 0 } }\r\n]\r\nconst [elements, setElements] = useState(initialElements);\r\n//const [elements, setElements] = useState([]);\r\nconst [lastId, setLastId] = useState(1);\r\nconst [name, setName] = useState(\"\")\r\nconst [text, setText] = useState(\"blank\");\r\nconst [removingId, setRemovingId] = useState(0);\r\n\r\nconst addNode2 = () => {\r\n    var lId = parseInt(`${lastId}`);\r\n    var node = getImageNode(lId + 1);\r\n    setText(lId);\r\n    setLastId(lId + 1);\r\n    setElements(e => e.concat({\r\n        //id: (e.length + 1).toString(),\r\n        id: lId +1,\r\n        //data: { label: <div><h1>Hello</h1></div> },\r\n        data: { label: node },\r\n        //position: { x: Math.random() * window.innerWidth, y: Math.random() * window.innerHeight }\r\n        position: {x: e[0].position.x + 50, y: e[0].position.y + 50}\r\n    }));\r\n};\r\n\r\nconst getImageNode = (nid) => {\r\n    var x = nid.toString();\r\n    return <div>\r\n        <h3>Node {nid}</h3>\r\n        <button onClick={e=>onRemove(x)}>Click</button>\r\n    </div>\r\n};\r\n\r\nfunction Mix() {\r\n    const [elements, setElements] = useState(initialElements);\r\n    return (\r\n        <div className=\"App\">\r\n            <SideBar />\r\n            <Basic3 elements={elements} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Mix;\r\n"]},"metadata":{},"sourceType":"module"}