{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Shaft\\\\Desktop\\\\flow\\\\flowgen2\\\\src\\\\Components\\\\Basic3.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from 'react';\nimport ReactFlow, { addEdge, Background, Controls, MiniMap, getBezierPath, getMarkerEnd } from 'react-flow-renderer';\nimport Sidebar from './Sidebar';\n\nconst onLoad = reactFlowInstance => {\n  reactFlowInstance.fitView();\n};\n\nconst Card = props => {\n  _s();\n\n  const [elements, setElements] = useState(0);\n  const [lastId, setLastId] = useState(1);\n  const [name, setName] = useState(\"\");\n  const [text, setText] = useState(props);\n  const [removingId, setRemovingId] = useState(0);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n      elements: elements //onLoad={onLoad}\n      ,\n      style: {\n        width: '100%',\n        height: '90vh'\n      } //onConnect={onConnect}\n      ,\n      connectionLineStyle: {\n        stroke: \"#ddd\",\n        strokeWidth: 2\n      },\n      connectionLineType: \"bezier\",\n      snapToGrid: true,\n      snapGrid: [16, 16],\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        color: \"#888\",\n        gap: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setName(e.target.value),\n        name: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\" //onClick={addNode}\n        ,\n        children: \"Add Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\" //onClick={addNode2}\n        ,\n        children: \"Add Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Card, \"Oyn3DyPZovQxoVWxsLlMw9Uxa5o=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["C:/Users/Shaft/Desktop/flow/flowgen2/src/Components/Basic3.js"],"names":["React","useState","Fragment","ReactFlow","addEdge","Background","Controls","MiniMap","getBezierPath","getMarkerEnd","Sidebar","onLoad","reactFlowInstance","fitView","Card","props","elements","setElements","lastId","setLastId","name","setName","text","setText","removingId","setRemovingId","width","height","stroke","strokeWidth","e","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AAEA,OAAOC,SAAP,IAAoBC,OAApB,EAA6BC,UAA7B,EAAyCC,QAAzC,EAAmDC,OAAnD,EAA4DC,aAA5D,EAA2EC,YAA3E,QAA+F,qBAA/F;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,MAAMC,MAAM,GAAIC,iBAAD,IAAuB;AAClCA,EAAAA,iBAAiB,CAACC,OAAlB;AACH,CAFD;;AAIA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAEpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACqB,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAACc,KAAD,CAAhC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BxB,QAAQ,CAAC,CAAD,CAA5C;AAEA,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,SAAD;AACI,MAAA,QAAQ,EAAEe,QADd,CAEI;AAFJ;AAGI,MAAA,KAAK,EAAE;AAAEU,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAHX,CAII;AAJJ;AAKI,MAAA,mBAAmB,EAAE;AAAEC,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,WAAW,EAAE;AAA/B,OALzB;AAMI,MAAA,kBAAkB,EAAC,QANvB;AAOI,MAAA,UAAU,EAAE,IAPhB;AAQI,MAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CARd;AAAA,8BAUI,QAAC,UAAD;AAAY,QAAA,KAAK,EAAC,MAAlB;AAAyB,QAAA,GAAG,EAAE;AAA9B;AAAA;AAAA;AAAA;AAAA,cAVJ,eAWI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAXJ,eAYI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAgBI;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AACI,QAAA,QAAQ,EAAEC,CAAC,IAAIT,OAAO,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAD1B;AAEI,QAAA,IAAI,EAAC;AAFT;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AACI,QAAA,IAAI,EAAC,QADT,CAEI;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAQI;AACI,QAAA,IAAI,EAAC,QADT,CAEI;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eAYI;AAAA,kBAAKV;AAAL;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH,CA1CD;;GAAMR,I;;KAAAA,I;AA4CN,eAAeA,IAAf","sourcesContent":["import React, { useState, Fragment } from 'react';\r\n\r\nimport ReactFlow, { addEdge, Background, Controls, MiniMap, getBezierPath, getMarkerEnd } from 'react-flow-renderer';\r\nimport Sidebar from './Sidebar';\r\n\r\n\r\nconst onLoad = (reactFlowInstance) => {\r\n    reactFlowInstance.fitView();\r\n}\r\n\r\nconst Card = (props) => {\r\n\r\n    const [elements, setElements] = useState(0);\r\n    const [lastId, setLastId] = useState(1);\r\n    const [name, setName] = useState(\"\")\r\n    const [text, setText] = useState(props);\r\n    const [removingId, setRemovingId] = useState(0);\r\n\r\n    return (\r\n        <Fragment>\r\n            <ReactFlow\r\n                elements={elements}\r\n                //onLoad={onLoad}\r\n                style={{ width: '100%', height: '90vh' }}\r\n                //onConnect={onConnect}\r\n                connectionLineStyle={{ stroke: \"#ddd\", strokeWidth: 2 }}\r\n                connectionLineType=\"bezier\"\r\n                snapToGrid={true}\r\n                snapGrid={[16, 16]}\r\n            >\r\n                <Background color=\"#888\" gap={16} />\r\n                <MiniMap />\r\n                <Controls />\r\n            </ReactFlow>\r\n\r\n            <div>\r\n                <input type=\"text\"\r\n                    onChange={e => setName(e.target.value)}\r\n                    name=\"title\" />\r\n                <button\r\n                    type=\"button\"\r\n                    //onClick={addNode}\r\n                >Add Node</button>\r\n                <button\r\n                    type=\"button\"\r\n                    //onClick={addNode2}\r\n                >Add Node</button>\r\n                <h1>{text}</h1>\r\n            </div>\r\n            \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Card;"]},"metadata":{},"sourceType":"module"}