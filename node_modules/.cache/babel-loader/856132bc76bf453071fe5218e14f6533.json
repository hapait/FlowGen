{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Shaft\\\\Desktop\\\\flow\\\\flowgen2\\\\src\\\\Components\\\\Mix.js\",\n    _s = $RefreshSig$();\n\n//import logo from './logo.svg';\nimport '../App.css'; //import Basic from './Components/Basic';\n//import Basic2 from './Components/Basic2';\n\nimport Basic3 from './Basic3'; //import ReactFlow from 'react-flow-renderer';\n//import CustomNodeFlow from './Components/CustomNode';\n\nimport SideBar from './Sidebar';\nimport React, { useState, Fragment } from 'react';\nimport ReactFlow, { addEdge, Background, Controls, MiniMap, getBezierPath, getMarkerEnd } from 'react-flow-renderer';\nimport Sidebar from './Sidebar';\n\nconst onLoad = reactFlowInstance => {\n  reactFlowInstance.fitView();\n};\n\nconst initialElements = [{\n  id: '1',\n  type: 'input',\n  data: {\n    label: 'Start Node'\n  },\n  position: {\n    x: 0,\n    y: 0\n  }\n}];\n\nconst Mix = () => {\n  _s();\n\n  const [elements, setElements] = useState(initialElements); //const [elements, setElements] = useState([]);\n\n  const [lastId, setLastId] = useState(1);\n  const [name, setName] = useState(\"\");\n  const [text, setText] = useState(\"blank\");\n  const [removingId, setRemovingId] = useState(0);\n\n  const addNode = () => {\n    setElements(e => e.concat({\n      //id: (e.length + 1).toString(),\n      id: lastId + 1,\n      data: {\n        label: `${name}`\n      },\n      position: {\n        x: Math.random() * window.innerWidth,\n        y: Math.random() * window.innerHeight\n      }\n    }));\n  };\n\n  const addNode2 = () => {\n    var lId = parseInt(`${lastId}`);\n    var node = getImageNode(lId + 1);\n    setText(lId);\n    setLastId(lId + 1);\n    setElements(e => e.concat({\n      //id: (e.length + 1).toString(),\n      id: lId + 1,\n      //data: { label: <div><h1>Hello</h1></div> },\n      data: {\n        label: node\n      },\n      //position: { x: Math.random() * window.innerWidth, y: Math.random() * window.innerHeight }\n      position: {\n        x: e[0].position.x + 50,\n        y: e[0].position.y + 50\n      }\n    }));\n  };\n\n  const onRemove = nid => {\n    //alert(nid.toString());\n    //setText(\"removing\" + nid.toString());\n    var newarr = elements.filter(element => element.id !== nid);\n    setElements(newarr);\n  };\n\n  const getImageNode = nid => {\n    var x = nid.toString();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Node \", nid]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => onRemove(x),\n        children: \"Click\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 16\n    }, this);\n  };\n\n  const onConnect = params => {\n    //setText(params.source.toString() + params.target.toString());\n    var i = 'e' + params.source.toString() + '-' + params.target.toString();\n    var s = params.source.toString();\n    var t = params.target.toString();\n    setElements(e => e.concat({\n      id: i,\n      source: s,\n      target: t,\n      animated: true\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Basic3, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Mix, \"Pt+v4N8GD/nwOlPMeeoCKMES5Og=\");\n\n_c = Mix;\nexport default Mix;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mix\");","map":{"version":3,"sources":["C:/Users/Shaft/Desktop/flow/flowgen2/src/Components/Mix.js"],"names":["Basic3","SideBar","React","useState","Fragment","ReactFlow","addEdge","Background","Controls","MiniMap","getBezierPath","getMarkerEnd","Sidebar","onLoad","reactFlowInstance","fitView","initialElements","id","type","data","label","position","x","y","Mix","elements","setElements","lastId","setLastId","name","setName","text","setText","removingId","setRemovingId","addNode","e","concat","Math","random","window","innerWidth","innerHeight","addNode2","lId","parseInt","node","getImageNode","onRemove","nid","newarr","filter","element","toString","onConnect","params","i","source","target","s","t","animated"],"mappings":"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","sourcesContent":["//import logo from './logo.svg';\r\nimport '../App.css';\r\n//import Basic from './Components/Basic';\r\n//import Basic2 from './Components/Basic2';\r\nimport Basic3 from './Basic3';\r\n//import ReactFlow from 'react-flow-renderer';\r\n//import CustomNodeFlow from './Components/CustomNode';\r\nimport SideBar from './Sidebar';\r\nimport React, { useState, Fragment } from 'react';\r\nimport ReactFlow, { addEdge, Background, Controls, MiniMap, getBezierPath, getMarkerEnd } from 'react-flow-renderer';\r\nimport Sidebar from './Sidebar';\r\n\r\nconst onLoad = (reactFlowInstance) => {\r\n    reactFlowInstance.fitView();\r\n}\r\nconst initialElements = [\r\n    { id: '1', type: 'input', data: { label: 'Start Node' }, position: { x: 0, y: 0 } }\r\n]\r\nconst Mix = () => {\r\n\r\n    const [elements, setElements] = useState(initialElements);\r\n    //const [elements, setElements] = useState([]);\r\n    const [lastId, setLastId] = useState(1);\r\n    const [name, setName] = useState(\"\")\r\n    const [text, setText] = useState(\"blank\");\r\n    const [removingId, setRemovingId] = useState(0);\r\n\r\n    const addNode = () => {\r\n        setElements(e => e.concat({\r\n            //id: (e.length + 1).toString(),\r\n            id: lastId +1,\r\n            data: { label: `${name}` },\r\n            position: { x: Math.random() * window.innerWidth, y: Math.random() * window.innerHeight }\r\n        }));\r\n    };\r\n    const addNode2 = () => {\r\n        var lId = parseInt(`${lastId}`);\r\n        var node = getImageNode(lId + 1);\r\n        setText(lId);\r\n        setLastId(lId + 1);\r\n        setElements(e => e.concat({\r\n            //id: (e.length + 1).toString(),\r\n            id: lId +1,\r\n            //data: { label: <div><h1>Hello</h1></div> },\r\n            data: { label: node },\r\n            //position: { x: Math.random() * window.innerWidth, y: Math.random() * window.innerHeight }\r\n            position: {x: e[0].position.x + 50, y: e[0].position.y + 50}\r\n        }));\r\n    };\r\n    const onRemove = (nid) => {\r\n        //alert(nid.toString());\r\n        //setText(\"removing\" + nid.toString());\r\n        var newarr = elements.filter(element => element.id !== nid);\r\n        setElements(newarr);\r\n    };\r\n    const getImageNode = (nid) => {\r\n        var x = nid.toString();\r\n        return <div>\r\n            <h3>Node {nid}</h3>\r\n            <button onClick={e=>onRemove(x)}>Click</button>\r\n        </div>\r\n    };\r\n\r\n    const onConnect = (params) => {\r\n        //setText(params.source.toString() + params.target.toString());\r\n        var i = 'e' + params.source.toString() + '-' + params.target.toString();\r\n        var s = params.source.toString();\r\n        var t = params.target.toString();\r\n        setElements(e => e.concat({ \r\n            id: i, \r\n            source: s, \r\n            target: t, \r\n            animated: true }));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Sidebar/>\r\n            <Basic3/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mix;\r\n"]},"metadata":{},"sourceType":"module"}