{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shaft\\\\Desktop\\\\flow\\\\flowgen2\\\\src\\\\Components\\\\Basic.js\";\nimport React, { useState, Fragment } from 'react';\nimport ReactFlow, { addEdge, Background, Controls, MiniMap } from 'react-flow-renderer';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nconst elements = [{\n  id: '1',\n  type: 'input',\n  // input node\n  data: {\n    label: 'Input Node'\n  },\n  position: {\n    x: 250,\n    y: 25\n  }\n}, // default node\n{\n  id: '2',\n  // you can also pass a React component as a label\n  data: {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Default Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 24\n    }, this)\n  },\n  position: {\n    x: 100,\n    y: 125\n  }\n}, {\n  id: '3',\n  type: 'output',\n  // output node\n  data: {\n    label: 'Output Node'\n  },\n  position: {\n    x: 250,\n    y: 250\n  }\n}, // animated edge\n{\n  id: 'e1-2',\n  source: '1',\n  target: '2',\n  animated: true\n}, {\n  id: 'e2-3',\n  source: '2',\n  target: '3'\n}];\nexport default class Base extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n        elements: elements,\n        onLoad: onLoad,\n        style: {\n          width: '100%',\n          height: '90vh'\n        },\n        onConnect: onConnect,\n        connectionLineStyle: {\n          stroke: \"#ddd\",\n          strokeWidth: 2\n        },\n        connectionLineType: \"bezier\",\n        snapToGrid: true,\n        snapGrid: [16, 16],\n        children: [/*#__PURE__*/_jsxDEV(Background, {\n          color: \"#888\",\n          gap: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setName(e.target.value),\n          name: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addNode,\n          children: \"Add Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 14\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Shaft/Desktop/flow/flowgen2/src/Components/Basic.js"],"names":["React","useState","Fragment","ReactFlow","addEdge","Background","Controls","MiniMap","Fab","AddIcon","EditIcon","FavoriteIcon","NavigationIcon","elements","id","type","data","label","position","x","y","source","target","animated","Base","Component","render","onLoad","width","height","onConnect","stroke","strokeWidth","e","setName","value","addNode"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\r\nimport ReactFlow, { addEdge, Background, Controls, MiniMap } from 'react-flow-renderer';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport NavigationIcon from '@material-ui/icons/Navigation';\r\n\r\nconst elements = [\r\n    {\r\n        id: '1',\r\n        type: 'input', // input node\r\n        data: { label: 'Input Node' },\r\n        position: { x: 250, y: 25 },\r\n    },\r\n    // default node\r\n    {\r\n        id: '2',\r\n        // you can also pass a React component as a label\r\n        data: { label: <div>Default Node</div> },\r\n        position: { x: 100, y: 125 },\r\n    },\r\n    {\r\n        id: '3',\r\n        type: 'output', // output node\r\n        data: { label: 'Output Node' },\r\n        position: { x: 250, y: 250 },\r\n    },\r\n    // animated edge\r\n    { id: 'e1-2', source: '1', target: '2', animated: true },\r\n    { id: 'e2-3', source: '2', target: '3' },\r\n];\r\n\r\nexport default class Base extends React.Component {\r\n    render() {\r\n      return <Fragment>\r\n      <ReactFlow\r\n      elements={elements}\r\n      onLoad={onLoad}\r\n      style={{width:'100%',height: '90vh'}}\r\n      onConnect = {onConnect}\r\n      connectionLineStyle={{stroke: \"#ddd\", strokeWidth: 2}}\r\n      connectionLineType = \"bezier\"\r\n      snapToGrid = {true}\r\n      snapGrid={[16,16]}\r\n      >\r\n          <Background color=\"#888\" gap={16} />\r\n          <MiniMap/>\r\n          <Controls />\r\n          </ReactFlow>\r\n\r\n      <div>\r\n          <input type=\"text\"\r\n          onChange={e => setName(e.target.value)}\r\n          name=\"title\"/>\r\n          <button \r\n          type=\"button\"\r\n          onClick={addNode}\r\n          >Add Node</button>\r\n      </div>\r\n  </Fragment>\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}