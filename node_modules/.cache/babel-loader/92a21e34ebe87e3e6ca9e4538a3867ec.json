{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shaft\\\\Desktop\\\\flow\\\\flowgen2\\\\src\\\\Components\\\\Basic.js\";\nimport React, { useState, Fragment } from 'react';\nimport ReactFlow, { addEdge, Background, Controls, MiniMap } from 'react-flow-renderer';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport NavigationIcon from '@material-ui/icons/Navigation'; //const [elements, setElements] = useState(initialElements);\n//const [name, setName] = useState(\"\")\n\nconst elements = [{\n  id: '1',\n  type: 'input',\n  // input node\n  data: {\n    label: 'Input Node'\n  },\n  position: {\n    x: 250,\n    y: 25\n  }\n}, // default node\n{\n  id: '2',\n  // you can also pass a React component as a label\n  data: {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Default Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 24\n    }, this)\n  },\n  position: {\n    x: 100,\n    y: 125\n  }\n}, {\n  id: '3',\n  type: 'output',\n  // output node\n  data: {\n    label: 'Output Node'\n  },\n  position: {\n    x: 250,\n    y: 250\n  }\n}, // animated edge\n{\n  id: 'e1-2',\n  source: '1',\n  target: '2',\n  animated: true\n}, {\n  id: 'e2-3',\n  source: '2',\n  target: '3'\n}];\n\nconst onLoad = reactFlowInstance => {\n  reactFlowInstance.fitView();\n};\n\nconst addNode = () => {\n  setElements(e => e.concat({\n    id: (e.length + 1).toString(),\n    data: {\n      label: `${name}`\n    },\n    position: {\n      x: Math.random() * window.innerWidth,\n      y: Math.random() * window.innerHeight\n    }\n  }));\n}; //const onConnect = (params) => setElements(e => addEdge(params,e));\n\n\nexport default (() => /*#__PURE__*/_jsxDEV(Fragment, {\n  style: {\n    height: 400\n  },\n  children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n    elements: elements,\n    onLoad: onLoad,\n    style: {\n      width: '100%',\n      height: '90vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Fab, {\n    onClick: addNode,\n    style: {\n      right: 20,\n      top: 20,\n      position: \"fixed\"\n    },\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Fab, {\n    style: {\n      right: 20,\n      top: 80,\n      position: \"fixed\"\n    },\n    \"aria-label\": \"like\",\n    children: /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 49,\n  columnNumber: 5\n}, this));","map":{"version":3,"sources":["C:/Users/Shaft/Desktop/flow/flowgen2/src/Components/Basic.js"],"names":["React","useState","Fragment","ReactFlow","addEdge","Background","Controls","MiniMap","Fab","AddIcon","EditIcon","FavoriteIcon","NavigationIcon","elements","id","type","data","label","position","x","y","source","target","animated","onLoad","reactFlowInstance","fitView","addNode","setElements","e","concat","length","toString","name","Math","random","window","innerWidth","innerHeight","height","width","right","top"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\r\nimport ReactFlow, { addEdge, Background, Controls, MiniMap } from 'react-flow-renderer';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport NavigationIcon from '@material-ui/icons/Navigation';\r\n\r\n//const [elements, setElements] = useState(initialElements);\r\n//const [name, setName] = useState(\"\")\r\n\r\nconst elements = [\r\n    {\r\n        id: '1',\r\n        type: 'input', // input node\r\n        data: { label: 'Input Node' },\r\n        position: { x: 250, y: 25 },\r\n    },\r\n    // default node\r\n    {\r\n        id: '2',\r\n        // you can also pass a React component as a label\r\n        data: { label: <div>Default Node</div> },\r\n        position: { x: 100, y: 125 },\r\n    },\r\n    {\r\n        id: '3',\r\n        type: 'output', // output node\r\n        data: { label: 'Output Node' },\r\n        position: { x: 250, y: 250 },\r\n    },\r\n    // animated edge\r\n    { id: 'e1-2', source: '1', target: '2', animated: true },\r\n    { id: 'e2-3', source: '2', target: '3' },\r\n];\r\nconst onLoad = (reactFlowInstance) => {\r\n    reactFlowInstance.fitView();\r\n}\r\n\r\nconst addNode = () => {\r\n    setElements(e => e.concat({\r\n        id: (e.length+1).toString(),\r\n        data: {label: `${name}`},\r\n        position: {x: Math.random() * window.innerWidth, y: Math.random() * window.innerHeight}\r\n    }));\r\n};\r\n//const onConnect = (params) => setElements(e => addEdge(params,e));\r\nexport default () => (\r\n    <Fragment style={{ height: 400 }}>\r\n        <ReactFlow\r\n            elements={elements}\r\n            onLoad={onLoad}\r\n            style={{ width: '100%', height: '90vh' }}\r\n        >\r\n            <Controls />\r\n            <MiniMap />\r\n        </ReactFlow>\r\n        <Fab onClick={addNode} style={{ right: 20, top: 20, position: \"fixed\" }} color=\"primary\" aria-label=\"add\">\r\n            <AddIcon />\r\n        </Fab>\r\n        <Fab style={{ right: 20, top: 80, position: \"fixed\" }} aria-label=\"like\">\r\n            <FavoriteIcon />\r\n        </Fab>\r\n    </Fragment>\r\n);"]},"metadata":{},"sourceType":"module"}