{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Shaft\\\\Desktop\\\\flow\\\\flowgen2\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Basic from './Components/Basic';\nimport Basic2 from './Components/Basic2';\nimport Basic3 from './Components/Basic3';\nimport ReactFlow from 'react-flow-renderer';\nimport CustomNodeFlow from './Components/CustomNode';\nimport SideBar from './Components/Sidebar';\nimport React, { useState, Fragment } from 'react';\nimport Mix from './Components/Mix';\nconst initialElements = [{\n  id: '1',\n  type: 'input',\n  data: {\n    label: 'Mind Node'\n  },\n  position: {\n    x: 0,\n    y: 0\n  }\n}];\n\nfunction App() {\n  _s();\n\n  //const [elements, setElements] = useState(initialElements);\n  const allInputs = {\n    imgUrl: ''\n  };\n  const [imageAsFile, setImageAsFile] = useState('');\n  const [imageAsUrl, setImageAsUrl] = useState(allImputs);\n  console.log(imageAsFile);\n\n  const handleImageAsFile = e => {\n    const image = e.target.files[0];\n    setImageAsFile(imageFile => image);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleImageAsFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"LjehDPuaBXaeUF5+nmVLPLgtkyQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Shaft/Desktop/flow/flowgen2/src/App.js"],"names":["Basic","Basic2","Basic3","ReactFlow","CustomNodeFlow","SideBar","React","useState","Fragment","Mix","initialElements","id","type","data","label","position","x","y","App","allInputs","imgUrl","imageAsFile","setImageAsFile","imageAsUrl","setImageAsUrl","allImputs","console","log","handleImageAsFile","e","image","target","files","imageFile"],"mappings":";;;;;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,MAAMC,eAAe,GAAG,CACtB;AAAEC,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,IAAI,EAAE,OAAjB;AAA0BC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAhC;AAAwDC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX;AAAlE,CADsB,CAAxB;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAMC,SAAS,GAAG;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAlB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACgB,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAACkB,SAAD,CAA5C;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;;AACA,QAAMO,iBAAiB,GAAIC,CAAD,IAAO;AAC/B,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAd;AACAV,IAAAA,cAAc,CAACW,SAAS,IAAKH,KAAf,CAAd;AACD,GAHD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BAME;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,QAAQ,EAAEF;AAFZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA5BQV,G;;KAAAA,G;AA8BT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Basic from './Components/Basic';\nimport Basic2 from './Components/Basic2';\nimport Basic3 from './Components/Basic3';\nimport ReactFlow from 'react-flow-renderer';\nimport CustomNodeFlow from './Components/CustomNode';\nimport SideBar from './Components/Sidebar';\nimport React, { useState, Fragment } from 'react';\nimport Mix from './Components/Mix';\nconst initialElements = [\n  { id: '1', type: 'input', data: { label: 'Mind Node' }, position: { x: 0, y: 0 } }\n]\n\nfunction App() {\n  //const [elements, setElements] = useState(initialElements);\n  const allInputs = { imgUrl: '' }\n  const [imageAsFile, setImageAsFile] = useState('')\n  const [imageAsUrl, setImageAsUrl] = useState(allImputs)\n\n  console.log(imageAsFile)\n  const handleImageAsFile = (e) => {\n    const image = e.target.files[0]\n    setImageAsFile(imageFile => (image))\n  }\n\n\n  return (\n    <div className=\"App\">\n      {\n        //<CustomNodeFlow/>\n        //<Mix/>\n        //<Basic2/>\n      }\n      <form>\n        <input\n          type=\"file\"\n          onChange={handleImageAsFile}\n        />\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}